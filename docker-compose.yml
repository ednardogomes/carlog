services:
  car_log_db:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    container_name: car_log_db
    volumes:
      - car_log_db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - car_log_network

  car_log_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: car_log_app
    environment:
      - PORT=${PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '3000:3000'
    depends_on:
      - car_log_db
      - car_log_redis
    networks:
      - car_log_network
    volumes:
      - .:/app
      - /app/node_modules

  car_log_pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: car_log_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - car_log_db
    networks:
      - car_log_network
    volumes:
      - car_log_pgadmin:/var/lib/pgadmin

  car_log_redis:
    image: redis:latest
    container_name: car_log_redis
    ports:
      - '6379:6379'
    networks:
      - car_log_network
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis:/data
    restart: always

volumes:
  redis:
    driver: local
    name: car_log_redis
  car_log_db:
    driver: local
    name: car_log_db
  car_log_pgadmin:
    driver: local
    name: car_log_pgadmin

networks:
  car_log_network:
    driver: bridge
